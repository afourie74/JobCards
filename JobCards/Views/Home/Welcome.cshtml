@model IEnumerable<JobCards.Models.ViewModel.JobCardView>
@{
    ViewBag.Title = "Welcome";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Hi <b>@Context.User.Identity.Name</b></h2>
<br />
<h3>Your last 5 job cards</h3>
<table class="table table-striped table-condensed table-hover">
    <thead>
        <tr>
            <th>Job Number</th>
            <th>Customer</th>
            <th>Designer</th>
            <th>Job Date</th>
            <th>Quote</th>
            <th>Job Type</th>
            <th>Material</th>
            <th>Next Action</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var i in Model)
        {
            <tr>
                <td> @Html.DisplayFor(m => i.JobCardID)</td>
                <td> @Html.DisplayFor(m => i.Customers.Single(x => x.CustomerID == i.CustomerID).Name)</td>
                <td> @Html.DisplayFor(m => i.Designers.Single(x => x.DesignerID == i.DesignerID).Name)</td>
                <td> @Html.DisplayFor(m => i.JobDate)</td>
                <td> @Html.DisplayFor(m => i.QuoteRef)</td>
                <td> @Html.DisplayFor(m => i.JobTypes.Single(x => x.JobTypeID == i.JobTypeID).Name)</td>
                <td> @Html.DisplayFor(m => i.Materials.Single(x => x.MaterialID == i.MaterialID).Name)</td>
                
                @switch (i.TaskStep)
                {
                    case JobCards.Models.ViewModel.TaskStep.Created:
                        <td>@Html.ActionLink("UV Printing", "UVPrinted", "JobCard" , new { id = i.JobCardID }, new { })</td>
                        break;
                    case JobCards.Models.ViewModel.TaskStep.UVPrint:
                        <td>@Html.ActionLink("Application", "Application", "JobCArd", new { id = i.JobCardID }, new { })</td>
                        break;
                    case JobCards.Models.ViewModel.TaskStep.Application:
                        <td>@Html.ActionLink("Clading", "Clading", "JobCard", new { id = i.JobCardID }, new { })</td>
                        break;
                    case JobCards.Models.ViewModel.TaskStep.Clading:
                        <td>@Html.ActionLink("Installation", "Installation", "JobCard", new { id = i.JobCardID }, new { })</td>
                        break;
                    case JobCards.Models.ViewModel.TaskStep.Install:
                        <td>@Html.ActionLink("Invoicing", "Invoice", "JobCard", new { id = i.JobCardID }, new { })</td>
                        break;
                    default:
                        <td>@Html.ActionLink("Completed", "History", "JobCard", new { id = i.JobCardID }, new { })</td>
                        break;
                }

                @if (Context.User.IsInRole("Admin"))
                {
                    <td>@Html.ActionLink("Details","History","JobCard", new { id = i.JobCardID }, new { })</td>
                    <td>@Html.ActionLink("Delete", "Delete", "JobCard", new { id = i.JobCardID }, new { })</td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
            </tr>
        }
    </tbody>
</table>
<br />
<br />
<h3>Reports</h3>
<br />
<input type="button" value="UV Printing" onclick="location.href='@Url.Action("UVPrinting", "Reports")'" />
&nbsp;
<input type="button" value="Application" onclick="location.href='@Url.Action("Application", "Reports")'" />
&nbsp;
<input type="button" value="Clading" onclick="location.href='@Url.Action("Clading", "Reports")'" />
&nbsp;
<input type="button" value="Installation" onclick="location.href='@Url.Action("Installation", "Reports")'" />
&nbsp;
<input type="button" value="Invoice" onclick="location.href='@Url.Action("Invoice", "Reports")'" />



